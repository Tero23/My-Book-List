{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Tero\\\\Desktop\\\\Projects\\\\GraphQL-exercise-1\\\\client\\\\src\\\\components\\\\BookDetails.js\",\n    _s = $RefreshSig$();\n\nimport { useQuery } from \"@apollo/client\";\nimport { getBookQuery } from \"../queries/queries\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst BookDetails = _ref => {\n  _s();\n\n  let {\n    id\n  } = _ref;\n  console.log(id);\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(getBookQuery, {\n    options: id => {\n      return {\n        variables: {\n          id\n        }\n      };\n    }\n  });\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Error :(\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 21\n  }, this);\n  const book = data === null || data === void 0 ? void 0 : data.book;\n  console.log(book);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      children: book\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n\n_s(BookDetails, \"OQZiY3KqWoytFPIJWw/H9Hrmbok=\", false, function () {\n  return [useQuery];\n});\n\n_c = BookDetails;\nexport default BookDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"BookDetails\");","map":{"version":3,"names":["useQuery","getBookQuery","BookDetails","id","console","log","loading","error","data","options","variables","book"],"sources":["C:/Users/Tero/Desktop/Projects/GraphQL-exercise-1/client/src/components/BookDetails.js"],"sourcesContent":["import { useQuery } from \"@apollo/client\";\r\nimport { getBookQuery } from \"../queries/queries\";\r\n\r\nconst BookDetails = ({ id }) => {\r\n  console.log(id);\r\n  const { loading, error, data } = useQuery(getBookQuery, {\r\n    options: (id) => {\r\n      return {\r\n        variables: {\r\n          id,\r\n        },\r\n      };\r\n    },\r\n  });\r\n\r\n  if (loading) return <p>Loading...</p>;\r\n  if (error) return <p>Error :(</p>;\r\n  const book = data?.book;\r\n  console.log(book);\r\n  return (\r\n    <div>\r\n      <p>{book}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BookDetails;\r\n"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,gBAAzB;AACA,SAASC,YAAT,QAA6B,oBAA7B;;;AAEA,MAAMC,WAAW,GAAG,QAAY;EAAA;;EAAA,IAAX;IAAEC;EAAF,CAAW;EAC9BC,OAAO,CAACC,GAAR,CAAYF,EAAZ;EACA,MAAM;IAAEG,OAAF;IAAWC,KAAX;IAAkBC;EAAlB,IAA2BR,QAAQ,CAACC,YAAD,EAAe;IACtDQ,OAAO,EAAGN,EAAD,IAAQ;MACf,OAAO;QACLO,SAAS,EAAE;UACTP;QADS;MADN,CAAP;IAKD;EAPqD,CAAf,CAAzC;EAUA,IAAIG,OAAJ,EAAa,oBAAO;IAAA;EAAA;IAAA;IAAA;IAAA;EAAA,QAAP;EACb,IAAIC,KAAJ,EAAW,oBAAO;IAAA;EAAA;IAAA;IAAA;IAAA;EAAA,QAAP;EACX,MAAMI,IAAI,GAAGH,IAAH,aAAGA,IAAH,uBAAGA,IAAI,CAAEG,IAAnB;EACAP,OAAO,CAACC,GAAR,CAAYM,IAAZ;EACA,oBACE;IAAA,uBACE;MAAA,UAAIA;IAAJ;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AAKD,CArBD;;GAAMT,W;UAE6BF,Q;;;KAF7BE,W;AAuBN,eAAeA,WAAf"},"metadata":{},"sourceType":"module"}